{"version":3,"sources":["components/Logo/Logo.tsx","components/Footer/Footer.tsx","components/PageNavLink/PageNavLink.tsx","components/Nav/Nav.tsx","utils/searchHelper.ts","types/ErrorType.ts","components/SearchBar/SearchBar.tsx","utils/fetchClient.ts","api/Products.ts","utils/useLocaleStorage.ts","utils/getProductToSave.ts","context/Context.tsx","components/HeaderButtons/HeaderButtons.tsx","components/Header/Header.tsx","App.tsx","components/BackButton/BackButton.tsx","pages/PageNotFound/PageNotFound.tsx","components/BannerSlider/BannerSlider.tsx","components/ProductCard/ProductCard.tsx","components/ProductsSlider/ProductsSlider.tsx","components/ShopByCategory/ShopByCategory.tsx","pages/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/ProductsNav/ProductsNav.tsx","components/NoResults/NoResults.tsx","components/Dropdown/Dropdown.tsx","components/Pagination/Pagination.tsx","components/ProductsList/ProductsList.tsx","pages/PhonesPage/PhonesPage.tsx","components/AddToCartButton/AddToCartButton.tsx","components/LikeButton/LikeButton.tsx","pages/ProductDetailsPage/ProductDetailsPage.tsx","pages/TabletsPage/TabletsPage.tsx","pages/AccessoriesPage/AccessoriesPage.tsx","pages/FavoritesPage/FavoritesPage.tsx","components/CartItem/CartItem.tsx","pages/CartPage/CartPage.tsx","index.tsx"],"names":["Logo","to","className","src","alt","Footer","location","useLocation","footerList","map","item","href","path","title","pathname","onClick","window","scrollTo","top","left","behavior","PageNavLink","name","type","isActive","classNames","Nav","pageNavList","link","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","Error","SearchBar","useSearchParams","searchParams","setSearchParams","query","get","useState","inputValue","setInputValue","currentLocation","slice","useMemo","handleDebounceChange","debounce","event","target","trim","handleDeleteChange","onChange","placeholder","length","role","tabIndex","onKeyDown","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","json","client","getProducts","getProductDetails","productId","useLocalStorage","initialValue","valueFromStorage","localStorage","getItem","parse","getProductToSave","savedProducts","saveToState","newProduct","newProducts","copyOfProducts","savedProduct","find","id","savedProductIndex","indexOf","isChangingQuantity","quantity","filter","product","useProduct","setItem","Context","React","createContext","products","selectedProduct","cart","favorite","isError","isLoading","setProducts","setSelectedProduct","setCart","setFavorite","setIsError","setIsLoading","changeCart","changeFavorite","ContextProvider","children","selectedProductStorage","contextValue","useEffect","loadProducts","a","loadedProducts","GET_PRODUCTS","Provider","HeaderButtons","useContext","productsAmount","Header","useParams","cartCondition","includes","favoriteCondition","productCategoriesList","CategoriesList","some","App","BackButton","navigate","useNavigate","PageNotFound","BannerImages","BannerSlider","currentIndex","setCurrentIndex","interval","setInterval","prev","clearInterval","image","index","ProductCard","imageUrl","price","discount","screen","capacity","ram","isInCart","isInFavs","currentProduct","productCard","discountPrice","getCardDetails","currentProductDetails","GET_PRODUCT_DETAILS","features","keys","values","ProductsSlider","memo","start","setStart","end","disablePrevButton","disableNextButton","disabled","ShopByCategory","phones","tablets","accessories","categoryCount","HomePage","items","sort","product1","product2","getBrandNewProducts","Loader","ProductsNav","isProduct","setIsProduct","pageLink","split","pageTitle","charAt","toUpperCase","productTitle","productItem","NoResults","Dropdown","dropdownList","defaultValue","label","searchParamsKey","isOpen","setIsOpen","setValue","buttonRef","useRef","document","addEventListener","e","current","ref","dropdownItem","search","params","page","Pagination","perPage","currentPage","pagesAmount","Math","ceil","pagesList","from","_","i","n","numberPage","optionsSort","optionsPage","ProductsList","Number","lastPage","sortedProducts","productsList","age","localeCompare","param","toLowerCase","getSortedProducts","PhonesPage","setPhones","getPhones","phonesFromApi","loadPhones","AddToCartButton","size","LikeButton","colorsList","capacityList","ProductDetailsPage","category","currentId","images","selectedImage","setSelectedImage","selectedColor","setSelectedColor","selectedCapacity","setSelectedCapacity","newPrice","priceWithDiscount","featuresLong","display","screenSize","screenResolution","hardware","cpu","storage","flash","android","os","connectivity","bluetooth","battery","standbyTime","currentCategory","productCategory","itemType","getProductInfo","style","backgroundImage","el","description","TabletsPage","setTablets","getTablets","tabletsFromApi","AccessoriesPage","setAccessories","getAccessories","accessoriesFromApi","FavoritesPage","favoriteCount","CartItem","priceAfterDiscount","CartPage","isOpenModal","setIsOpenModal","totalPrice","reduce","b","totalItems","ReactDOM","render","element","replace","getElementById"],"mappings":"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","file":"static/js/main.97f98fbc.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const Logo: React.FC = () => (\n  <Link to=\"/\" className=\"logo\">\n    <img src=\"./img/Logo.svg\" alt=\"logo\" />\n  </Link>\n);\n","import { Link, useLocation } from 'react-router-dom';\nimport { Logo } from '../Logo/Logo';\nimport footerList from '../../api/navFooter.json';\nimport './Footer.scss';\n\nexport const Footer: React.FC = () => {\n  const location = useLocation();\n\n  const handleScrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__container\">\n        <Logo />\n\n        <div className=\"footer__nav\">\n          {footerList.map(item => (\n            <a\n              key={item.title}\n              href={item.path}\n              className=\"footer__link\"\n            >\n              {item.title}\n            </a>\n          ))}\n        </div>\n\n        <Link\n          className=\"button-top\"\n          to={`${location.pathname}`}\n          onClick={handleScrollToTop}\n        >\n          <p className=\"button-top__text\">\n            Back to top\n          </p>\n\n          <span\n            className=\"button-top__icon\"\n          />\n        </Link>\n      </div>\n    </footer>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './PageNavLink.scss';\n\ntype Props = {\n  name: string,\n  to: string,\n};\n\nexport const PageNavLink:React.FC<Props> = ({\n  name,\n  to,\n}) => {\n  return (\n    <NavLink\n      type=\"button\"\n      to={{\n        pathname: to,\n      }}\n      className={({ isActive }) => classNames(\n        'nav__link',\n        { 'nav__link--active': isActive },\n      )}\n    >\n      {name}\n    </NavLink>\n  );\n};\n","import pageNavList from '../../api/navHeader.json';\nimport { PageNavLink } from '../PageNavLink/PageNavLink';\nimport './Nav.scss';\n\nexport const Nav = () => {\n  return (\n    <div className=\"navbar\">\n      {pageNavList.map(link => (\n        <PageNavLink\n          key={link.title}\n          to={link.path}\n          name={link.title}\n        />\n      ))}\n    </div>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","export enum Error {\n  GET_PRODUCTS = 'Unable to get the products',\n  GET_PRODUCT_DETAILS = 'Unable to get the product\\'s details',\n}\n","import { debounce } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../utils/searchHelper';\nimport './SearchBar.scss';\n\nexport const SearchBar: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const [inputValue, setInputValue] = useState(query);\n  const location = useLocation();\n  const currentLocation = location.pathname.slice(1);\n\n  useMemo(() => {\n    setInputValue(query);\n  }, [query]);\n\n  const handleDebounceChange = debounce(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchParams(\n        getSearchWith(searchParams,\n          { query: event.target.value.trim() || null }),\n      );\n    }, 1000,\n  );\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n    handleDebounceChange(event);\n  };\n\n  const handleDeleteChange = () => {\n    setInputValue('');\n    setSearchParams(getSearchWith(searchParams, { query: null }));\n  };\n\n  return (\n    <div className=\"searchbar\">\n      <input\n        className=\"searchbar__input\"\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder={`Search in ${currentLocation}...`}\n      />\n\n      {!inputValue && (\n        <span\n          className=\"searchbar__icon searchbar__icon--search\"\n        />\n      )}\n\n      { inputValue.length > 0 && (\n        <div\n          data-cy=\"searchDelete\"\n          role=\"button\"\n          tabIndex={0}\n          onKeyDown={() => handleDeleteChange()}\n          onClick={() => handleDeleteChange()}\n        >\n          <span\n            className=\"searchbar__icon searchbar__icon--close\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate-academy.github.io/react_phone-catalog/api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: unknown = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: unknown) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: unknown) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { Product } from '../types/Product';\nimport { ProductDetails } from '../types/ProductDetails';\nimport { client } from '../utils/fetchClient';\n\nexport const getProducts = () => {\n  return client.get<Product[]>('/products.json');\n};\n\nexport const getProductDetails = (productId: string) => {\n  return client.get<ProductDetails>(`/products/${productId}.json`);\n};\n","import { useState } from 'react';\nimport { Product } from '../types/Product';\n\nexport const useLocalStorage = (key: string, initialValue: Product[]) => {\n  const valueFromStorage = localStorage.getItem(key) || '[]';\n\n  const [value, setValue] = useState(\n    valueFromStorage ? JSON.parse(valueFromStorage) : initialValue,\n  );\n\n  return [value, setValue];\n};\n\n/* export const useLocalStorage = (key: string, initialValue: Product[]) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const data = localStorage.getItem(key);\n\n      return data ? JSON.parse(data) : initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const save = (currentValue: Product) => {\n    setValue(currentValue);\n    localStorage.setItem(key, JSON.stringify(currentValue));\n  };\n\n  return [value, save];\n}; */\n","import { Product } from '../types/Product';\n\nexport const getProductToSave = (\n  key: string,\n  savedProducts: Product[],\n  saveToState: React.Dispatch<React.SetStateAction<Product[]>>,\n) => {\n  return (newProduct: Product) => {\n    let newProducts: Product[];\n    const copyOfProducts = [...savedProducts];\n    const savedProduct = savedProducts.find(\n      item => item.id === newProduct.id,\n    );\n    const savedProductIndex = savedProduct\n      ? savedProducts.indexOf(savedProduct)\n      : -1;\n    const isChangingQuantity = (\n      savedProduct?.quantity !== newProduct.quantity\n    ) && newProduct?.quantity;\n\n    if (isChangingQuantity && savedProductIndex >= 0) {\n      copyOfProducts[savedProductIndex].quantity = newProduct.quantity;\n    }\n\n    if (savedProduct) {\n      newProducts = copyOfProducts.filter(\n        (product) => {\n          if (isChangingQuantity) {\n            return true;\n          }\n\n          return product.id !== newProduct.id;\n        },\n      );\n    } else {\n      const useProduct = key === 'cart'\n        ? { ...newProduct, quantity: 1 }\n        : { ...newProduct };\n\n      newProducts = [\n        ...savedProducts,\n        useProduct,\n      ];\n    }\n\n    saveToState(newProducts);\n    localStorage.setItem(key, JSON.stringify(newProducts));\n  };\n};\n","import React, {\n  Dispatch, SetStateAction, useEffect, useState,\n} from 'react';\nimport { Product } from '../types/Product';\nimport { ProductDetails } from '../types/ProductDetails';\nimport { Error } from '../types/ErrorType';\nimport { getProducts } from '../api/Products';\nimport { useLocalStorage } from '../utils/useLocaleStorage';\nimport { getProductToSave } from '../utils/getProductToSave';\n\ntype ContextValue = {\n  products: Product[],\n  selectedProduct: ProductDetails,\n  cart: Product[],\n  favorite: Product[],\n  isError: Error | null,\n  isLoading: boolean;\n  setProducts: Dispatch<SetStateAction<Product[]>>,\n  setSelectedProduct: Dispatch<SetStateAction<ProductDetails>>,\n  setCart: Dispatch<SetStateAction<Product[]>>,\n  setFavorite: Dispatch<SetStateAction<Product[]>>,\n  setIsError: Dispatch<SetStateAction<Error | null>>,\n  setIsLoading: Dispatch<SetStateAction<boolean>>,\n  changeCart: (newProduct: Product) => void,\n  changeFavorite: (newProduct: Product) => void,\n};\n\nexport const Context = React.createContext<ContextValue>({\n  products: [],\n  selectedProduct: JSON.parse(`${localStorage.getItem('selectedProduct')}`),\n  cart: [],\n  favorite: [],\n  isError: null,\n  isLoading: false,\n  setProducts: () => {},\n  setSelectedProduct: () => {},\n  setCart: () => {},\n  setFavorite: () => {},\n  setIsError: () => {},\n  setIsLoading: () => {},\n  changeCart: () => {},\n  changeFavorite: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const ContextProvider: React.FC<Props> = ({ children }) => {\n  const selectedProductStorage = JSON.parse(`${localStorage.getItem('selectedProduct')}`);\n\n  const [products, setProducts] = useState<Product[]>([]);\n  const [\n    selectedProduct, setSelectedProduct,\n  ] = useState<ProductDetails>(selectedProductStorage);\n  const [cart, setCart] = useLocalStorage('cart', []);\n  const [favorite, setFavorite] = useLocalStorage('favorite', []);\n  const [isError, setIsError] = useState<Error | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const changeCart = getProductToSave(\n    'cart',\n    cart,\n    setCart,\n  );\n  const changeFavorite = getProductToSave(\n    'favorite',\n    favorite,\n    setFavorite,\n  );\n\n  const contextValue: ContextValue = {\n    products,\n    selectedProduct,\n    cart,\n    favorite,\n    isError,\n    isLoading,\n    setProducts,\n    setSelectedProduct,\n    setCart,\n    setFavorite,\n    setIsError,\n    setIsLoading,\n    changeCart,\n    changeFavorite,\n  };\n\n  useEffect(() => {\n    const loadProducts = async () => {\n      try {\n        setIsLoading(true);\n        const loadedProducts = await getProducts();\n\n        setProducts(loadedProducts);\n      } catch (error) {\n        setIsError(Error.GET_PRODUCTS);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadProducts();\n  }, []);\n\n  return (\n    <Context.Provider value={contextValue}>\n      {children}\n    </Context.Provider>\n  );\n};\n","import classNames from 'classnames';\nimport { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../context/Context';\nimport './HeaderButtons.scss';\n\ntype ButtonType = 'favorite' | 'cart';\n\ntype Props = {\n  type: ButtonType,\n};\n\nexport const HeaderButtons: React.FC<Props> = ({ type }) => {\n  const { cart, favorite } = useContext(Context);\n\n  const productsAmount = (type === 'cart')\n    ? cart.length\n    : favorite.length;\n\n  return (\n    <div\n      className={classNames(\n        'top-item',\n        { 'top-item--favorite': type === 'favorite' },\n        { 'top-item--cart': type === 'cart' },\n      )}\n    >\n      <Link\n        to={`/${type}`}\n        className=\"top-item__link\"\n      >\n        {type === 'favorite'\n          && (\n            <span\n              className=\"top-item__icon top-item__icon--favorite\"\n            />\n          )}\n\n        {type === 'cart'\n          && (\n            <span\n              className=\"top-item__icon top-item__icon--cart\"\n            />\n          )}\n\n        {productsAmount > 0\n          && (\n            <span className=\"top-item-count\">\n              {productsAmount}\n            </span>\n          )}\n      </Link>\n    </div>\n  );\n};\n","import { useLocation, useParams } from 'react-router-dom';\nimport { Logo } from '../Logo/Logo';\nimport { Nav } from '../Nav/Nav';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { HeaderButtons } from '../HeaderButtons/HeaderButtons';\nimport CategoriesList from '../../api/CategoriesList.json';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  const location = useLocation();\n  const { productId = '' } = useParams();\n\n  const cartCondition = location.pathname.includes('cart');\n  const favoriteCondition = location.pathname.includes('favorite');\n\n  const productCategoriesList = CategoriesList.map(item => item.type).some(\n    item => location.pathname.includes(item),\n  ) && !productId;\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__container\">\n        <div className=\"header__left\">\n          <div className=\"header__logo\">\n            <Logo />\n          </div>\n          {!cartCondition && <Nav />}\n        </div>\n        <div className=\"header__right\">\n          {(favoriteCondition || productCategoriesList) && <SearchBar />}\n          {!cartCondition && (\n            <HeaderButtons\n              type=\"favorite\"\n            />\n          )}\n          <HeaderButtons\n            type=\"cart\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Footer } from './components/Footer/Footer';\nimport { Header } from './components/Header/Header';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n\n    <main>\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n\n    <Footer />\n  </div>\n);\n\nexport default App;\n","import { useNavigate } from 'react-router-dom';\nimport './BackButton.scss';\n\nexport const BackButton = () => {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      data-cy=\"backButton\"\n      className=\"backButton\"\n      type=\"button\"\n      onClick={() => {\n        navigate(-1);\n      }}\n    >\n      <span className=\"backButton__icon\">\n        back\n      </span>\n    </button>\n  );\n};\n","import { BackButton } from '../../components/BackButton/BackButton';\nimport './PageNotFound.scss';\n\nexport const PageNotFound: React.FC = () => (\n  <div className=\"not-found\">\n    <BackButton />\n\n    <h1 className=\"not-found__title\">\n      Page not found!\n    </h1>\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport './BannerSlider.scss';\n\nconst BannerImages = [\n  'img/Banner1.jpg',\n  'img/Banner2.jpg',\n  'img/Banner3.jpg',\n];\n\nexport const BannerSlider: React.FC = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(\n      () => setCurrentIndex((prev) => prev + 1),\n      5000,\n    );\n\n    return () => clearInterval(interval);\n  }, [currentIndex]);\n\n  return (\n    <div className=\"banner\">\n      <div className=\"banner__container\">\n        <button\n          type=\"button\"\n          onClick={() => setCurrentIndex((prev) => prev - 1)}\n          className=\"banner__button banner__button--prev\"\n        >\n          <img src=\"./img/ArrowLeft.svg\" alt=\"arrowLeft\" />\n        </button>\n        <div className=\"banner__images\">\n          {BannerImages.map((image, index) => {\n            if (currentIndex > BannerImages.length - 1) {\n              setCurrentIndex(0);\n            }\n\n            if (currentIndex < 0) {\n              setCurrentIndex(BannerImages.length - 1);\n            }\n\n            return (\n              <img\n                src={image}\n                alt={image}\n                key={image}\n                className={classNames('banner__image', {\n                  'banner__image--active': index === currentIndex,\n                })}\n              />\n            );\n          })}\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => setCurrentIndex((prev) => prev + 1)}\n          className=\"banner__button banner__button--next\"\n        >\n          <img src=\"./img/ArrowRight.svg\" alt=\"arrowRigth\" />\n        </button>\n      </div>\n      <div className=\"banner__pagination-container\">\n        {BannerImages.map((image, index) => (\n          <button\n            key={image}\n            aria-label=\"banner__pagination\"\n            type=\"button\"\n            className={classNames('banner__button-pg', {\n              'banner__button-pg--active': index === currentIndex,\n            })}\n            onClick={() => setCurrentIndex(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Product } from '../../types/Product';\nimport { Context } from '../../context/Context';\nimport { getProductDetails } from '../../api/Products';\nimport { Error } from '../../types/ErrorType';\nimport './ProductCard.scss';\n\ntype Props = {\n  product: Product,\n};\n\nexport const ProductCard: React.FC<Props> = ({ product }) => {\n  const {\n    products,\n    setSelectedProduct,\n    setIsError,\n    setIsLoading,\n  } = useContext(Context);\n\n  const {\n    id,\n    type,\n    imageUrl,\n    name,\n    price,\n    discount,\n    screen,\n    capacity,\n    ram,\n  } = product;\n\n  const {\n    cart, changeCart, favorite, changeFavorite,\n  } = useContext(Context);\n\n  const isInCart = cart.length > 0\n    ? cart.find(item => item.id === id) : false;\n\n  const isInFavs = favorite.length > 0\n    ? favorite.find(item => item.id === id) : false;\n\n  const currentProduct = products.find(\n    productCard => productCard.id === id,\n  );\n\n  const discountPrice = price - (price / 100) * discount;\n\n  const getCardDetails = async (productId: string) => {\n    setIsError(null);\n    setIsLoading(true);\n\n    try {\n      const currentProductDetails = await getProductDetails(productId);\n\n      setSelectedProduct(currentProductDetails);\n    } catch {\n      setIsError(Error.GET_PRODUCT_DETAILS);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const features = {\n    keys: ['screen', 'capacity', 'RAM'],\n    values: [`${screen}`, `${capacity}`, `${ram}`],\n  };\n\n  return (\n    <div className=\"product-card\">\n      <div className=\"product-card__container\" data-cy=\"cardsContainer\">\n        <Link\n          to={`/${product.type}s/${product.id}`}\n          className=\"product-card__link\"\n          onClick={() => currentProduct && getCardDetails(currentProduct.id)}\n        >\n          <img src={`${imageUrl}`} alt={`${type}`} className=\"product-card__image\" />\n          <p className=\"product-card__title\">{name}</p>\n        </Link>\n\n        <div className=\"product-card__prices\">\n          <span className=\"product-card__price\">{`$${price}`}</span>\n          {discount > 0 && <span className=\"product-card__discount\">{`$${discountPrice}`}</span>}\n        </div>\n\n        <div className=\"product-card__features\">\n          <ul className=\"product-card__list\">\n            {features.keys.map((key) => (\n              <li key={key} className=\"product-card__key\">\n                {key}\n              </li>\n            ))}\n          </ul>\n\n          <ul className=\"product-card__list\">\n            {features.values.map((value) => (\n              <li key={value} className=\"product-card__value\">\n                {value}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"product-card__buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'product-card__buttons__to-cart',\n              { 'product-card__buttons__to-cart--selected': isInCart },\n            )}\n            onClick={() => {\n              changeCart(product);\n            }}\n          >\n            {`${isInCart ? 'Added' : 'Add'} to cart`}\n          </button>\n          <button\n            data-cy=\"addToFavorite\"\n            type=\"button\"\n            className={classNames(\n              'product-card__buttons__to-favs',\n            )}\n            onClick={() => {\n              changeFavorite(product);\n            }}\n          >\n            {isInFavs ? (\n              <span\n                className=\"product-card__buttons__to-favs--icon--selected\"\n              />\n            ) : (\n              <span\n                className=\"product-card__buttons__to-favs--icon\"\n              />\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { memo, useState } from 'react';\nimport classNames from 'classnames';\nimport { Product } from '../../types/Product';\nimport { ProductCard } from '../ProductCard/ProductCard';\nimport './ProductsSlider.scss';\n\ntype Props = {\n  title: string;\n  products: Product[];\n};\n\nexport const ProductsSlider: React.FC<Props> = memo(({ title, products }) => {\n  const [start, setStart] = useState(0);\n  const end = start + 4;\n\n  const disablePrevButton = start <= 0;\n  const disableNextButton = end > products.length - 1;\n\n  return (\n    <div className=\"products-slider\">\n      <div className=\"products-slider__container\">\n        <h2 className=\"products-slider__header\">{title}</h2>\n        <div className=\"products-slider__buttons\">\n          <button\n            aria-label=\"products-slider__buttons\"\n            type=\"button\"\n            className={classNames('products-slider__button', {\n              'products-slider__button--disabled': start <= 0,\n            })}\n            onClick={() => setStart((prev) => prev - 1)}\n            disabled={disablePrevButton}\n          >\n            <span\n              className=\"products-slider__icon products-slider__icon--left\"\n            />\n          </button>\n          <button\n            aria-label=\"products-slider__buttons\"\n            type=\"button\"\n            className={classNames('products-slider__button', {\n              'products-slider__button--disabled': end > products.length - 1,\n            })}\n            onClick={() => setStart((prev) => prev + 1)}\n            disabled={disableNextButton}\n          >\n            <span\n              className=\"products-slider__icon products-slider__icon--right\"\n            />\n          </button>\n        </div>\n      </div>\n      <div className=\"products-slider__products\">\n        {products.slice(start, end).map((product: Product) => (\n          <ProductCard product={product} key={product.id} />\n        ))}\n      </div>\n    </div>\n  );\n});\n","import { useContext, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport CategoriesList from '../../api/CategoriesList.json';\nimport { Context } from '../../context/Context';\nimport './ShopByCategory.scss';\n\nexport const ShopByCategory: React.FC = () => {\n  const { products } = useContext(Context);\n\n  const phones = useMemo(() => (\n    products.filter(product => product.type === 'phone')\n  ), [products]);\n\n  const tablets = useMemo(() => (\n    products.filter(product => product.type === 'tablet')\n  ), [products]);\n\n  const accessories = useMemo(() => (\n    products.filter(product => product.type === 'accessory')\n  ), [products]);\n\n  const categoryCount = (type: string) => {\n    switch (type) {\n      case 'phones':\n        return phones.length;\n\n      case 'tablets':\n        return tablets.length;\n\n      case 'accessory':\n        return accessories.length;\n\n      default:\n        return 0;\n    }\n  };\n\n  return (\n    <div className=\"categories\">\n      <h2 className=\"categories__title\">\n        Shop by category\n      </h2>\n      <div className=\"categories__container\">\n        {CategoriesList.map(type => (\n          <div\n            key={type.type}\n            className=\"categories__item-container\"\n          >\n            <Link\n              key={type.type}\n              to={type.url}\n              className=\"categories__item\"\n              data-cy=\"categoryLinksContainer\"\n            >\n              <img\n                className=\"categories__image\"\n                src={type.image}\n                alt={type.title}\n              />\n\n              <h3 className=\"categories__name\">\n                {type.title}\n              </h3>\n\n              <h4 className=\"categories__count\">\n                {`${categoryCount(type.type)} models`}\n              </h4>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { useContext } from 'react';\nimport { BannerSlider } from '../../components/BannerSlider/BannerSlider';\nimport { ProductsSlider } from '../../components/ProductsSlider/ProductsSlider';\nimport { Product } from '../../types/Product';\nimport { Context } from '../../context/Context';\nimport { ShopByCategory } from '../../components/ShopByCategory/ShopByCategory';\n\nexport const HomePage: React.FC = () => {\n  const { products } = useContext(Context);\n\n  const getHotPriceProducts = (items: Product[]) => {\n    return items\n      .filter(item => item.discount > 0)\n      .sort((product1, product2) => (\n        (product2.price * ((100 - product2.discount) / 100))\n        - (product1.price * ((100 - product1.discount) / 100))\n      ));\n  };\n\n  const getBrandNewProducts = (items: Product[]) => {\n    return items\n      .filter(item => item.discount === 0)\n      .sort((product1, product2) => product2.price - product1.price);\n  };\n\n  return (\n    <>\n      <BannerSlider />\n\n      <ProductsSlider\n        title=\"Hot prices\"\n        products={getHotPriceProducts(products)}\n      />\n\n      <ShopByCategory />\n\n      <ProductsSlider\n        title=\"Brand new\"\n        products={getBrandNewProducts(products)}\n      />\n    </>\n  );\n};\n","export const Loader = () => (\n  <div className=\"loader\">\n    <div className=\"loader__content\" />\n  </div>\n);\n","import {\n  useContext, useEffect, useMemo, useState,\n} from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport './ProductsNav.scss';\nimport { Context } from '../../context/Context';\nimport { getProductDetails } from '../../api/Products';\n\nexport const ProductsNav: React.FC = () => {\n  const { selectedProduct, setSelectedProduct } = useContext(Context);\n  const location = useLocation();\n  const { productId = '' } = useParams();\n  const [isProduct, setIsProduct] = useState(false);\n\n  const pageLink = location.pathname.split('/').slice(1)[0];\n  const pageTitle = pageLink.charAt(0).toUpperCase() + pageLink.slice(1);\n\n  const productTitle = useMemo(() => {\n    if (!selectedProduct && productId) {\n      getProductDetails(productId)\n        .then((productItem) => {\n          setSelectedProduct(productItem);\n        });\n    }\n\n    return selectedProduct?.name;\n  }, [selectedProduct, productId]);\n\n  useEffect(() => {\n    if (productId.length > 0) {\n      setIsProduct(true);\n    } else {\n      setIsProduct(false);\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"productsNav\">\n        <Link to=\"/\" className=\"productsNav__home\" />\n\n        {isProduct ? (\n          <>\n            <Link\n              to={`/${pageLink}`}\n              className=\"productsNav__link\"\n            >\n              {pageTitle}\n            </Link>\n\n            <p className=\"productsNav__link productsNav__link--title\">\n              {productTitle}\n            </p>\n          </>\n        ) : (\n          <Link\n            to={`/${pageLink}`}\n            className=\"productsNav__link productsNav__link--disabled\"\n          >\n            {pageTitle}\n          </Link>\n        )}\n      </div>\n    </>\n  );\n};\n","import { useNavigate } from 'react-router-dom';\nimport './NoResults.scss';\n\nexport const NoResults = () => {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"noresults\">\n      <div className=\"noresults__title\">Products can not be found</div>\n      <button\n        className=\"noresults__button\"\n        type=\"button\"\n        onClick={() => navigate('/')}\n      >\n        Go Home\n      </button>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { useRef, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../utils/searchHelper';\nimport './Dropdown.scss';\n\ntype Props = {\n  dropdownList: string[];\n  defaultValue: string;\n  label: string;\n  searchParamsKey: string;\n};\n\nexport const Dropdown: React.FC<Props> = ({\n  dropdownList,\n  defaultValue,\n  label,\n  searchParamsKey,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchParams] = useSearchParams();\n  const [value, setValue] = useState(defaultValue);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  const getSearchParams = (params: string) => {\n    if (searchParamsKey === 'perPage') {\n      return getSearchWith(searchParams, {\n        page: '1',\n        [searchParamsKey]: params,\n      });\n    }\n\n    return getSearchWith(searchParams, {\n      [searchParamsKey]: params,\n    });\n  };\n\n  document.addEventListener('click', (e) => {\n    if (e.target !== buttonRef.current) {\n      setIsOpen(false);\n    }\n  });\n\n  document.addEventListener('keyup', (e) => {\n    if (e.key === 'Tab' || e.key === 'Escape') {\n      setIsOpen(false);\n    }\n  });\n\n  return (\n    <div className=\"dropdown\">\n      <p className=\"dropdown__label\">{label}</p>\n      <button\n        ref={buttonRef}\n        type=\"button\"\n        className={classNames('dropdown__select', {\n          'dropdown__select--active': isOpen,\n        })}\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        {value}\n        <img\n          src=\"./img/ArrowDown.svg\"\n          alt=\"ArrowDown\"\n          className={classNames('dropdown__arrow', {\n            'dropdown__arrow--open': isOpen,\n          })}\n        />\n      </button>\n\n      {isOpen && (\n        <ul className=\"dropdown__options\">\n          {dropdownList.map(dropdownItem => (\n            <li\n              aria-hidden=\"true\"\n              key={dropdownItem}\n              className=\"dropdown__option\"\n              onClick={() => {\n                setValue(dropdownItem);\n                setIsOpen(false);\n              }}\n            >\n              <Link\n                to={{\n                  search: getSearchParams(dropdownItem),\n                }}\n              >\n                {dropdownItem}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getSearchWith } from '../../utils/searchHelper';\nimport './Pagination.scss';\n\ntype Props = {\n  productsAmount: number;\n  perPage: number;\n  currentPage: number;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  productsAmount, perPage, currentPage,\n}) => {\n  const [searchParams] = useSearchParams('');\n  const pagesAmount = () => (perPage ? Math.ceil(productsAmount / perPage) : 0);\n\n  const pagesList = (pagesAmount() > 1)\n    ? (Array.from(\n      { length: pagesAmount() },\n      (_, i) => i + 1,\n    ))\n    : [1];\n\n  return (\n    <div className=\"pagination\" data-cy=\"pagination\">\n      <Link\n        data-cy=\"paginationLeft\"\n        to={{\n          search: getSearchWith(searchParams, {\n            page: (currentPage - 1).toString(),\n          }),\n        }}\n        className={classNames(\n          'pagination__item',\n          {\n            'pagination__item--disabled': currentPage === pagesList[0],\n          },\n        )}\n      >\n        <img src=\"./img/ArrowLeft.svg\" alt=\"arrowLeft\" />\n      </Link>\n\n      <ul className=\"pagination__list\">\n        {pagesList.map((n) => {\n          const numberPage = n.toString();\n\n          return (\n            <li key={numberPage} className=\"pagination__item\">\n              <Link\n                to={{\n                  search: getSearchWith(searchParams, { page: numberPage }),\n                }}\n                className={classNames(\n                  'pagination__link',\n                  {\n                    'pagination__link--active': currentPage === n,\n                  },\n                )}\n              >\n                {numberPage}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <Link\n        data-cy=\"paginationRight\"\n        to={{\n          search: getSearchWith(searchParams, {\n            page: (currentPage + 1).toString(),\n          }),\n        }}\n        className={classNames(\n          'pagination__item',\n          {\n            'pagination__item--disabled':\n            currentPage === pagesList[pagesList.length - 1],\n          },\n        )}\n      >\n        <img src=\"./img/ArrowRight.svg\" alt=\"arrowRigth\" />\n      </Link>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { NoResults } from '../NoResults/NoResults';\nimport { Product } from '../../types/Product';\nimport { ProductCard } from '../ProductCard/ProductCard';\nimport { Dropdown } from '../Dropdown/Dropdown';\nimport { Pagination } from '../Pagination/Pagination';\nimport './ProductList.scss';\n\ntype Props = {\n  title: string\n  products: Product[]\n};\n\nconst optionsSort = ['newest', 'alphabetically', 'price', 'all'];\nconst optionsPage = ['4', '8', '16', 'all'];\n\nexport const ProductsList: React.FC<Props> = ({ title, products }) => {\n  const [searchParams] = useSearchParams();\n\n  const productsAmount = products.length;\n\n  const currentPage = Number(searchParams.get('page')) || 1;\n  const sort = searchParams.get('sort') || '';\n  const perPage = Number(searchParams.get('perPage')) || productsAmount;\n  const query = searchParams.get('query') || '';\n\n  const getSortedProducts = (productsList: Product[]) => {\n    let sortedProducts = [...productsList];\n\n    if (sort === 'newest') {\n      sortedProducts = sortedProducts.sort(\n        (product1, product2) => product1.age - product2.age,\n      );\n    }\n\n    if (sort === 'alphabetically') {\n      sortedProducts = sortedProducts.sort(\n        (product1, product2) => product1.name.localeCompare(product2.name),\n      );\n    }\n\n    if (sort === 'price') {\n      sortedProducts = sortedProducts.sort(\n        (product1, product2) => product1.price - product2.price,\n      );\n    }\n\n    if (query) {\n      const queryFilter = (param?: string | null) => {\n        return param\n          ? param.toLowerCase().includes(query.toLowerCase())\n          : null;\n      };\n\n      sortedProducts = sortedProducts.filter(\n        product => queryFilter(product.name),\n      );\n    }\n\n    return sortedProducts || null;\n  };\n\n  const lastPage = Math.ceil(productsAmount / +perPage);\n\n  const start = currentPage * perPage - perPage;\n  const end = currentPage * perPage <= productsAmount\n    ? currentPage * perPage\n    : productsAmount;\n\n  const sortedProducts = getSortedProducts(products).slice(start, end);\n\n  return (\n    <div className=\"product-list\">\n      <div className=\"product-list__container\">\n        <h1 className=\"product-list__title\">{title}</h1>\n        <p className=\"product-list__count\">{`${productsAmount} models`}</p>\n        {productsAmount === 0 ? (\n          <NoResults />\n        ) : (\n          <>\n            <div className=\"product-list__dropdowns\">\n              <Dropdown\n                dropdownList={optionsSort}\n                defaultValue=\"Choose an option\"\n                label=\"Sort by\"\n                searchParamsKey=\"sort\"\n              />\n              <Dropdown\n                dropdownList={optionsPage}\n                defaultValue=\"All\"\n                label=\"Items on page\"\n                searchParamsKey=\"perPage\"\n              />\n            </div>\n\n            <div className=\"product-list__products\">\n              {sortedProducts.map((product) => (\n                <ProductCard key={product.id} product={product} />\n              ))}\n            </div>\n          </>\n        )}\n        <div className=\"product-list__pagination\">\n          {perPage !== productsAmount && lastPage > 1 && (\n            <Pagination\n              productsAmount={productsAmount}\n              perPage={perPage}\n              currentPage={currentPage}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useContext, useEffect, useState } from 'react';\nimport { Context } from '../../context/Context';\nimport { Loader } from '../../components/Loader/Loader';\nimport { ProductsNav } from '../../components/ProductsNav/ProductsNav';\nimport { ProductsList } from '../../components/ProductsList/ProductsList';\nimport { Product } from '../../types/Product';\nimport { getProducts } from '../../api/Products';\nimport { Error } from '../../types/ErrorType';\n\nexport const PhonesPage: React.FC = () => {\n  const [phones, setPhones] = useState<Product[]>([]);\n  const { isLoading, setIsLoading, setIsError } = useContext(Context);\n\n  const getPhones = (products: Product[], type: string) => {\n    const phonesFromApi = products.filter(\n      product => product.type === type,\n    );\n\n    setPhones(phonesFromApi);\n  };\n\n  useEffect(() => {\n    const loadPhones = async () => {\n      try {\n        setIsLoading(true);\n        const products = await getProducts();\n\n        getPhones(products, 'phone');\n      } catch (error) {\n        setIsError(Error.GET_PRODUCTS);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadPhones();\n  }, []);\n\n  return (\n    <div>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <ProductsNav />\n\n          <ProductsList title=\"Mobile phones\" products={phones} />\n        </>\n      )}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { useContext } from 'react';\nimport { Product } from '../../types/Product';\nimport { Context } from '../../context/Context';\nimport './AddToCartButton.scss';\nimport { ButtonType } from '../../types/ButtonType';\n\ntype Props = {\n  product: Product;\n  size: ButtonType;\n};\n\nexport const AddToCartButton: React.FC<Props> = ({ product, size }) => {\n  const { changeCart, cart } = useContext(Context);\n\n  const isInCart = cart.length > 0\n    ? cart.find(item => item.id === product?.id) : false;\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\n        'button',\n        `button--${size}`,\n        {\n          'button--selected': isInCart,\n        },\n      )}\n      onClick={() => changeCart(product)}\n    >\n      {`${isInCart ? 'Added to cart' : 'Add to cart'}`}\n    </button>\n  );\n};\n","import { useContext } from 'react';\nimport classNames from 'classnames';\nimport { Product } from '../../types/Product';\nimport { Context } from '../../context/Context';\nimport './LikeButton.scss';\nimport { ButtonType } from '../../types/ButtonType';\n\ntype Props = {\n  product: Product;\n  size: ButtonType;\n};\n\nexport const LikeButton: React.FC<Props> = ({ product, size }) => {\n  const { changeFavorite, favorite } = useContext(Context);\n\n  const isInFavs = favorite.length > 0\n    ? favorite.find(item => item.id === product?.id) : false;\n\n  return (\n    <button\n      aria-label=\"like\"\n      type=\"button\"\n      className={classNames(\n        'button-like',\n        'button-like--icon',\n        `button-like--${size}`,\n        {\n          'button-like--icon--selected': isInFavs,\n        },\n      )}\n      onClick={() => changeFavorite(product)}\n    >\n      {}\n    </button>\n  );\n};\n","import {\n  useContext, useEffect, useMemo, useState,\n} from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Loader } from '../../components/Loader/Loader';\nimport { ProductsNav } from '../../components/ProductsNav/ProductsNav';\nimport { Context } from '../../context/Context';\nimport { ProductsSlider } from '../../components/ProductsSlider/ProductsSlider';\nimport CategoriesList from '../../api/CategoriesList.json';\nimport { Product } from '../../types/Product';\nimport { BackButton } from '../../components/BackButton/BackButton';\nimport {\n  AddToCartButton,\n} from '../../components/AddToCartButton/AddToCartButton';\nimport { LikeButton } from '../../components/LikeButton/LikeButton';\nimport { getProductDetails } from '../../api/Products';\nimport { Error } from '../../types/ErrorType';\nimport './ProductDetailsPage.scss';\n\nconst colorsList = ['pink', 'grey', 'black', 'white'];\nconst capacityList = [16, 256, 512];\n\nexport const ProductDetailsPage: React.FC = () => {\n  const {\n    isLoading, products, setIsError, setIsLoading,\n    selectedProduct, setSelectedProduct,\n  } = useContext(Context);\n  const { productId = '' } = useParams();\n  const location = useLocation();\n  const [selectedImage, setSelectedImage] = useState(\n    selectedProduct?.images[0],\n  );\n  const [selectedColor, setSelectedColor] = useState(colorsList[0]);\n  const [selectedCapacity, setSelectedCapacity] = useState(capacityList[0]);\n\n  const priceWithDiscount = (product: Product) => {\n    return product.price - (product.discount * product.price) / 100;\n  };\n\n  const product = products.find(\n    item => item.id === selectedProduct?.id,\n  );\n\n  const newPrice = product ? priceWithDiscount(product) : 0;\n\n  const featuresLong = {\n    keys: ['screen', 'resolution', 'processor', 'RAM', 'built in memory',\n      'android', 'bluetooth', 'battery'],\n    values: [\n      `${selectedProduct?.display.screenSize}`,\n      `${selectedProduct?.display.screenResolution}`,\n      `${selectedProduct?.hardware.cpu}`,\n      `${selectedProduct?.storage.ram}`,\n      `${selectedProduct?.storage.flash}`,\n      `${selectedProduct?.android.os}`,\n      `${selectedProduct?.connectivity.bluetooth}`,\n      `${selectedProduct?.battery.standbyTime}`,\n    ],\n  };\n\n  const currentCategory = location.pathname.split('/').slice(1)[0];\n\n  const productCategory = useMemo(() => {\n    const list = CategoriesList.filter(\n      item => item.type === currentCategory,\n    )[0];\n\n    return list.itemType;\n  }, [location]);\n\n  const getRecommendations = (\n    items: Product[], category: string, currentId: string,\n  ) => {\n    return items\n      .filter(item => (item.type === category)\n        && (currentId !== item.id))\n      .sort((product1, product2) => (\n        product2.price - product1.price\n      ));\n  };\n\n  const getProductInfo = async (id: string) => {\n    setIsError(null);\n\n    try {\n      const item = await getProductDetails(id);\n\n      setSelectedProduct(item);\n    } catch {\n      setIsError(Error.GET_PRODUCT_DETAILS);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!selectedProduct && productId.length > 0) {\n      getProductInfo(productId);\n    }\n  }, [productId]);\n\n  return (\n    <div>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"product-details\">\n          <ProductsNav data-cy=\"breadCrumbs\" />\n          <BackButton data-cy=\"backButton\" />\n          <div className=\"product-details__title\">{selectedProduct?.name}</div>\n\n          <div className=\"product-details__content\">\n            <div className=\"product-details__top\">\n              <div className=\"product-details__slider slider\">\n                <div className=\"slider__col\">\n                  {selectedProduct?.images.map((image) => (\n                    <button\n                      key={image}\n                      aria-label=\"image\"\n                      type=\"button\"\n                      className={classNames('slider__button', {\n                        'slider__button--active':\n                        selectedImage === image,\n                      })}\n                      style={{ backgroundImage: `url(${image})` }}\n                      onClick={() => setSelectedImage(image)}\n                    />\n                  ))}\n                </div>\n                <div\n                  className=\"slider__main\"\n                  style={{ backgroundImage: `url(${selectedImage})` }}\n                />\n              </div>\n\n              <div className=\"product-details__action\">\n                <div className=\"product-details__select\">\n                  <p className=\"product-details__small-text\">\n                    Available colors\n                  </p>\n                  <ul className=\"product-details__select-buttons colors\">\n                    {colorsList.map((el, index) => (\n                      <div\n                        key={el}\n                        role=\"button\"\n                        className={classNames(\n                          'colors__item-circle',\n                          {\n                            'colors__item-circle--is-active':\n                            selectedColor === el,\n                          },\n                        )}\n                        tabIndex={index}\n                        onClick={() => setSelectedColor(el)}\n                        onKeyDown={() => setSelectedColor(el)}\n                      >\n                        <li\n                          className={classNames(\n                            'colors__item',\n                            `colors__item--${el}`,\n                          )}\n                        />\n                      </div>\n                    ))}\n                  </ul>\n                </div>\n\n                <div className=\"product-details__select\">\n                  <p className=\"product-details__small-text\">\n                    Select capacity\n                  </p>\n                  <div className=\"product-details__select-buttons capacity\">\n                    {capacityList.map(el => (\n                      <button\n                        key={el}\n                        type=\"button\"\n                        className={classNames(\n                          'capacity__item',\n                          {\n                            'capacity__item--is-active':\n                              selectedCapacity === el,\n                          },\n                        )}\n                        onClick={() => setSelectedCapacity(el)}\n                      >\n                        {`${el} GB`}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"product-details__prices\">\n                  <span className=\"product-card__price\">{`$${product?.price}`}</span>\n                  {product?.discount !== 0\n                    && (\n                      <span className=\"product-card__discount\">\n                        {`$${newPrice}`}\n\n                      </span>\n                    )}\n                </div>\n\n                {product\n                  && (\n                    <div className=\"product-details__actions-button\">\n                      <AddToCartButton\n                        product={product}\n                        size=\"big\"\n                      />\n                      <LikeButton\n                        product={product}\n                        size=\"big\"\n                      />\n                    </div>\n                  )}\n\n                <div className=\"product-details__features\">\n                  <ul className=\"product-details__list\">\n                    {featuresLong.keys.slice(0, 4).map((key) => (\n                      <li key={key} className=\"product-details__key\">\n                        {key}\n                      </li>\n                    ))}\n                  </ul>\n\n                  <ul className=\"product-details__list\">\n                    {featuresLong.values.slice(0, 4).map((value) => (\n                      <li key={value} className=\"product-details__value\">\n                        {value}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"product-details__botom\">\n              {selectedProduct && (\n                <div\n                  className=\"product-details__description\"\n                  data-cy=\"productDescription\"\n                >\n                  <h2 className=\"product-details__subtitle\">About</h2>\n\n                  <div className=\"product-details__text\">\n                    {selectedProduct.description}\n                  </div>\n                </div>\n              )}\n\n              <div className=\"product-details__tech-specs\">\n                <h2 className=\"product-details__subtitle\">Tech specs</h2>\n                <div className=\"product-details__features\">\n                  <ul className=\"product-details__list\">\n                    {featuresLong.keys.map((key) => (\n                      <li key={key} className=\"product-details__key\">\n                        {key}\n                      </li>\n                    ))}\n                  </ul>\n\n                  <ul className=\"product-details__list\">\n                    {featuresLong.values.map((value) => (\n                      <li key={value} className=\"product-details__value\">\n                        {value}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <ProductsSlider\n            title=\"You may also like\"\n            products={getRecommendations(products, productCategory, productId)}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useContext, useEffect, useState } from 'react';\nimport { Context } from '../../context/Context';\nimport { Loader } from '../../components/Loader/Loader';\nimport { ProductsNav } from '../../components/ProductsNav/ProductsNav';\nimport { ProductsList } from '../../components/ProductsList/ProductsList';\nimport { Product } from '../../types/Product';\nimport { getProducts } from '../../api/Products';\nimport { Error } from '../../types/ErrorType';\n\nexport const TabletsPage: React.FC = () => {\n  const [tablets, setTablets] = useState<Product[]>([]);\n  const { isLoading, setIsLoading, setIsError } = useContext(Context);\n\n  const getTablets = (products: Product[], type: string) => {\n    const tabletsFromApi = products.filter(\n      product => product.type === type,\n    );\n\n    setTablets(tabletsFromApi);\n  };\n\n  useEffect(() => {\n    const loadPhones = async () => {\n      try {\n        setIsLoading(true);\n        const products = await getProducts();\n\n        getTablets(products, 'tablet');\n      } catch (error) {\n        setIsError(Error.GET_PRODUCTS);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadPhones();\n  }, []);\n\n  return (\n    <div>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <ProductsNav />\n\n          <ProductsList title=\"Tablets\" products={tablets} />\n        </>\n      )}\n    </div>\n  );\n};\n","import { useContext, useEffect, useState } from 'react';\nimport { Product } from '../../types/Product';\nimport { Context } from '../../context/Context';\nimport { getProducts } from '../../api/Products';\nimport { Error } from '../../types/ErrorType';\nimport { Loader } from '../../components/Loader/Loader';\nimport { ProductsNav } from '../../components/ProductsNav/ProductsNav';\nimport { ProductsList } from '../../components/ProductsList/ProductsList';\n\nexport const AccessoriesPage: React.FC = () => {\n  const [accessories, setAccessories] = useState<Product[]>([]);\n  const { isLoading, setIsLoading, setIsError } = useContext(Context);\n\n  const getAccessories = (products: Product[], type: string) => {\n    const accessoriesFromApi = products.filter(\n      product => product.type === type,\n    );\n\n    setAccessories(accessoriesFromApi);\n  };\n\n  useEffect(() => {\n    const loadPhones = async () => {\n      try {\n        setIsLoading(true);\n        const products = await getProducts();\n\n        getAccessories(products, 'accessory');\n      } catch (error) {\n        setIsError(Error.GET_PRODUCTS);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadPhones();\n  }, []);\n\n  return (\n    <div>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <ProductsNav />\n\n          <ProductsList title=\"Accessories\" products={accessories} />\n        </>\n      )}\n    </div>\n  );\n};\n","import { useContext } from 'react';\nimport { Context } from '../../context/Context';\nimport { ProductsNav } from '../../components/ProductsNav/ProductsNav';\nimport { ProductCard } from '../../components/ProductCard/ProductCard';\nimport './FavoritesPage.scss';\n\nexport const FavoritesPage: React.FC = () => {\n  const { favorite } = useContext(Context);\n\n  const favoriteCount = favorite.length;\n\n  return (\n    <div className=\"favourites\">\n      <div className=\"favourites__top\">\n        <ProductsNav />\n      </div>\n      <h1 className=\"favourites__title title\">Favourites</h1>\n      <p className=\"favourites__count\">{`${favoriteCount} items`}</p>\n      {favoriteCount === 0 ? (\n        <h2 className=\"favourites__empty-title\">\n          There no favorite products found\n        </h2>\n      ) : (\n        <div className=\"favourites__list\">\n          {favorite.map((product) => (\n            <ProductCard key={product.id} product={product} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useContext } from 'react';\nimport { Context } from '../../context/Context';\nimport { Product } from '../../types/Product';\nimport './CartItem.scss';\n\nexport const CartItem: React.FC<Product> = (product) => {\n  const {\n    imageUrl,\n    name,\n    price,\n    quantity,\n    discount,\n  } = product;\n\n  const priceAfterDiscount = price * ((100 - discount) / 100);\n\n  const { changeCart } = useContext(Context);\n\n  const addItem = () => {\n    changeCart({\n      ...product,\n      quantity: quantity && quantity + 1,\n    });\n  };\n\n  const substractItem = () => {\n    changeCart({\n      ...product,\n      quantity: quantity && quantity - 1,\n    });\n  };\n\n  return (\n    <li className=\"cart__item\">\n      <button\n        data-cy=\"cartDeleteButton\"\n        className=\"cart__item__icon\"\n        type=\"button\"\n        onClick={() => changeCart(product)}\n      >\n        <span\n          className=\"cart__item__icon--close\"\n        />\n      </button>\n\n      <div className=\"cart__image--container\">\n        <img\n          src={imageUrl}\n          alt=\"product\"\n          className=\"cart__image\"\n        />\n      </div>\n\n      <div className=\"cart__item-title\">\n        {name}\n      </div>\n\n      <div className=\"cart__buttons\">\n        <button\n          className=\"cart__buttons__icon\"\n          type=\"button\"\n          onClick={() => substractItem()}\n          disabled={!quantity || quantity <= 1}\n        >\n          <span\n            className=\"cart__buttons__icon--substract\"\n          />\n        </button>\n\n        <div className=\"cart__quantity\">\n          {quantity}\n        </div>\n\n        <button\n          className=\"cart__buttons__icon\"\n          type=\"button\"\n          onClick={() => addItem()}\n        >\n          <span\n            className=\"cart__buttons__icon--add\"\n          />\n        </button>\n      </div>\n\n      <div className=\"cart__price\">\n        {`$${priceAfterDiscount * (quantity || 1)}`}\n      </div>\n    </li>\n  );\n};\n","import { useContext, useState } from 'react';\nimport { Context } from '../../context/Context';\nimport { Loader } from '../../components/Loader/Loader';\nimport { BackButton } from '../../components/BackButton/BackButton';\nimport './CartPage.scss';\nimport { CartItem } from '../../components/CartItem/CartItem';\n\nexport const CartPage: React.FC = () => {\n  const { isLoading, cart } = useContext(Context);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const totalPrice = cart.length === 0 ? 0 : cart.map((item) => {\n    const priceAfterDiscount = item.price * ((100 - item.discount) / 100);\n    const quantity = item.quantity || 1;\n\n    return priceAfterDiscount * quantity;\n  }).reduce((a, b) => a + b, 0);\n\n  let totalItems = 0;\n\n  cart.forEach(item => {\n    const quantity = item.quantity || 1;\n\n    totalItems += quantity;\n  });\n\n  return (\n    <>\n      {isLoading\n        ? <Loader />\n        : (\n          <div className=\"cart\">\n            <div className=\"cart__navigate\">\n              <BackButton />\n            </div>\n\n            <h2 className=\"cart__title\">Cart</h2>\n            {cart.length === 0 ? (\n              <h2 className=\"cart__empty\">Your cart is empty</h2>\n            ) : (\n              <>\n                <div className=\"cart__content\">\n                  <div className=\"cart__products\">\n                    {cart.map((product) => (\n                      <CartItem key={product.id} {...product} />\n                    ))}\n                  </div>\n                  <div className=\"cart__total-box\">\n                    <div className=\"cart__info\">\n                      <h2 className=\"cart__total-price\">{`$${totalPrice}`}</h2>\n                      <p className=\"cart__total-count\">{`Total for ${totalItems} items`}</p>\n                    </div>\n\n                    <button\n                      type=\"button\"\n                      className=\"cart__button button\"\n                      onClick={() => setIsOpenModal(true)}\n                    >\n                      Checkout\n                    </button>\n\n                    {isOpenModal && (\n                      <div className=\"cart__modal modal\">\n                        <div className=\"modal__content\">\n                          <p className=\"modal__title\">\n                            <span>We are sorry,</span>\n                            <span>but this feature is not implemented yet</span>\n                          </p>\n                          <button\n                            type=\"button\"\n                            className=\"modal__button button\"\n                            onClick={() => {\n                              setIsOpenModal(false);\n                            }}\n                          >\n                            Close\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport App from './App';\nimport { PageNotFound } from './pages/PageNotFound/PageNotFound';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PhonesPage } from './pages/PhonesPage/PhonesPage';\nimport {\n  ProductDetailsPage,\n} from './pages/ProductDetailsPage/ProductDetailsPage';\nimport { TabletsPage } from './pages/TabletsPage/TabletsPage';\nimport { AccessoriesPage } from './pages/AccessoriesPage/AccessoriesPage';\nimport { FavoritesPage } from './pages/FavoritesPage/FavoritesPage';\nimport { CartPage } from './pages/CartPage/CartPage';\nimport { ContextProvider } from './context/Context';\n\nReactDOM.render(\n  <Router>\n    <ContextProvider>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"*\" element={<PageNotFound />} />\n\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"phones\">\n            <Route index element={<PhonesPage />} />\n            <Route path=\":productId\" element={<ProductDetailsPage />} />\n          </Route>\n\n          <Route path=\"tablets\">\n            <Route index element={<TabletsPage />} />\n            <Route path=\":productId\" element={<ProductDetailsPage />} />\n          </Route>\n\n          <Route path=\"accessories\">\n            <Route index element={<AccessoriesPage />} />\n            <Route path=\":productId\" element={<ProductDetailsPage />} />\n          </Route>\n\n          <Route path=\"favorite\" element={<FavoritesPage />} />\n          <Route path=\"cart\" element={<CartPage />} />\n        </Route>\n      </Routes>\n    </ContextProvider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}